" Name: 16colors.vim
" Author: watcol
" License: MIT

" Setup
hi clear
syntax reset
let g:colors_name = '16colors'

" Load Configurations
let s:light = &background is# 'light'
let s:default_config = {
\ 'italic': 1,
\ 'colors': {
\   'none': {'cterm': 'none', 'gui': 'none'},
\   'invisible': {'cterm': s:light ? '15' : '0', 'gui': s:light ? '#000000' : '#ffffff'},
\   'bg_gray': {'cterm': s:light ? '7' : '8', 'gui': s:light ? '#555555' : '#aaaaaa'},
\   'mid_gray': {'cterm': s:light ? '8' : '7', 'gui': s:light ? '#555555' : '#aaaaaa'},
\   'fg_gray': {'cterm': s:light ? '0' : '15', 'gui': s:light ? '#555555' : '#aaaaaa'},
\   'dark_red': {'cterm': '1', 'gui': '#aa0000'},
\   'green': {'cterm': '2', 'gui': '#00aa00'},
\   'brown': {'cterm': '3', 'gui': '#aa5500'},
\   'blue': {'cterm': '4', 'gui': '#0000aa'},
\   'purple': {'cterm': '5', 'gui': '#aa00aa'},
\   'teal': {'cterm': '6', 'gui': '#00aaaa'},
\   'red': {'cterm': '9', 'gui': '#aa0000'},
\   'light_green': {'cterm': '10', 'gui': '#00aa00'},
\   'yellow': {'cterm': '11', 'gui': '#ffff55'},
\   'light_blue': {'cterm': '12', 'gui': '#0000aa'},
\   'pink': {'cterm': '13', 'gui': '#aa00aa'},
\   'cyan': {'cterm': '14', 'gui': '#00aaaa'},
\ },
\ 'categories': {
\   'None': 'none',
\   'FgWhite': s:light ? 'invisible' : 'none',
\   'BgBlack': s:light ? 'none' : 'invisible',
\   'Invisible': 'invisible',
\   'Cursor': 'bg_gray',
\   'Tabline': 'bg_gray',
\   'Visual': 'mid_gray',
\   'Background': 'bg_gray',
\   'Border': 'mid_gray',
\   'Selected': s:light ? 'light_blue' : 'mid_gray',
\   'Scrollbar': 'mid_gray',
\   'Quiet': 'fg_gray',
\   'VeryQuiet': 'mid_gray',
\   'Emphasis': 'red',
\   'Search': 'brown',
\   'Error': 'dark_red',
\   'Warning': 'yellow',
\   'Information': 'light_blue',
\   'Hint': 'light_green',
\   'Add': 'light_green',
\   'Change': 'yellow',
\   'Delete': 'red',
\   'String': 'green',
\   'Escape': 'blue',
\   'Literal': 'brown',
\   'Constant': 'none',
\   'Variable': 'none',
\   'Function': 'light_blue',
\   'Keyword': 'red',
\   'Statement': 'purple',
\   'Operator': 'blue',
\   'Macro': 'yellow',
\   'Command': 'pink',
\   'Type': 'yellow',
\   'Variant': 'green',
\   'Header': 'brown',
\   'Marker': 'pink',
\ },
\ 'highlights': {
\   'Normal': {'fg': 'None', 'bg': 'None'},
\   'ColorColumn': {'bg': 'Background'},
\   'Conceal': {'fg': 'Quiet'},
\   'Cursor': {'bg': 'Background'},
\   'CursorIM': {'bg': 'Background'},
\   'CursorColumn': {'bg': 'Cursor'},
\   'CursorLine': {'bg': 'Cursor', 'attrs': ['none']},
\   'LineNr': {'fg': 'Quiet', 'bg': 'None'},
\   'CursorLineNr': {'fg': 'None', 'bg': 'Cursor', 'attrs': ['none']},
\   'VertSplit': {'fg': 'Border', 'bg': 'None', 'attrs':['none']},
\   'Folded': {'fg': 'Quiet', 'bg': 'None', 'attrs': ['italic']},
\   'FoldColumn': {'fg': 'Quiet', 'bg': 'Background'},
\   'Search': {'fg': 'Search', 'bg': 'Background', 'attrs': ['none']},
\   'IncSearch': {'fg': 'Search', 'bg': 'Background', 'attrs': ['none']},
\   'MatchParen': {'fg': 'Emphasis', 'bg': 'None', 'attrs': ['underline']},
\   'ErrorMsg': {'fg': 'Error', 'bg': 'None', 'attrs': ['none']},
\   'WarningMsg': {'fg': 'Warning', 'bg': 'None', 'attrs': ['none']},
\   'Question': {'fg': 'Information'},
\   'Title': {'fg': 'Header'},
\   'MoreMsg': {'fg': 'Information'},
\   'NonText': {'fg': 'Invisible'},
\   'Special': {'fg': 'Escape'},
\   'SpecialKey': {'fg': 'VeryQuiet', 'attrs': ['none']},
\   'Whitespace': {'fg': 'VeryQuiet', 'bg': 'None', 'attrs': ['none']},
\   'Visual': {'bg': 'Visual', 'attrs': ['none']},
\   'VisualNOS': {'bg': 'Visual', 'attrs': ['none']},
\   'WildMenu': {'bg': 'Background', 'attrs': ['none']},
\   'SignColumn': {'bg': 'None', 'attrs': ['none']},
\   'Directory': {'fg': 'Escape', 'attrs': ['none']},
\   'Pmenu': {'fg': 'None', 'bg': 'Background', 'attrs': ['none']},
\   'PmenuSel': {'fg': 'FgWhite', 'bg': 'Selected', 'attrs': ['none']},
\   'PmenuSbar': {'bg': 'Background', 'attrs': ['none']},
\   'PmenuThumb': {'bg': 'Scrollbar', 'attrs': ['none']},
\   'StatusLine': {'fg': 'Background', 'attrs': ['none']},
\   'StatusLineNC': {'fg': 'Border', 'attrs': ['none']},
\   'TabLine': {'fg': 'Quiet', 'bg': 'Tabline', 'attrs': ['none']},
\   'TabLineSel': {'fg': 'None', 'bg': 'Tabline', 'attrs': ['none']},
\   'TabLineFill': {'fg': 'None', 'bg':'Tabline', 'attrs': ['none']},
\   'Comment': {'fg': 'Quiet', 'attrs': ['italic']},
\   'Constant': {'fg': 'Constant'},
\   'String': {'fg': 'String'},
\   'Character': {'fg': 'String'},
\   'Number': {'fg': 'Literal'},
\   'Boolean': {'fg': 'Literal'},
\   'Float': {'fg': 'Literal'},
\   'Identifier': {'fg': 'Variable', 'attrs': ['none']},
\   'Function': {'fg': 'Function'},
\   'Statement': {'fg': 'Statement'},
\   'Operator': {'fg': 'Operator'},
\   'Keyword': {'fg': 'Keyword'},
\   'Preproc': {'fg': 'Macro'},
\   'Type': {'fg': 'Type'},
\   'Delimiter': {'fg': 'None'},
\   'Underlined': {'fg': 'Emphasis', 'attrs': ['underline']},
\   'Error': {'fg': 'Error', 'bg': 'None', 'attrs': ['bold']},
\   'Todo': {'fg': 'Marker', 'bg': 'None'},
\   'javaScriptValue': {'fg': 'Literal'},
\   'luaConstant': {'fg': 'Literal'},
\   'luaTable': {'fg': 'None'},
\   'shStatement': {'fg': 'Command'},
\   'shOperator': {'fg': 'None'},
\   'shTestOpr': {'fg': 'Operator'},
\   'shCommandSub': {'fg': 'None'},
\   'shRange': {'fg': 'None'},
\   'shQuote': {'fg': 'String'},
\   'shFunction': {'fg': 'None'},
\   'vimCommand': {'fg': 'Command'},
\   'vimCommentTitle': {'fg': 'Marker'},
\   'zshCommands': {'fg': 'Command'},
\   'SpellBad': {'fg': 'Error', 'bg': 'None', 'attrs': ['underline']},
\   'SpellLocal': {'fg': 'Warning', 'bg': 'None', 'attrs': ['underline']},
\   'SpellCap': {'fg': 'Warning', 'bg': 'None', 'attrs': ['underline']},
\   'SpellRare': {'fg': 'Warning', 'bg': 'None', 'attrs': ['underline']},
\   'DiffAdd': {'fg': 'Add', 'bg': 'None'},
\   'DiffChange': {'fg': 'Change', 'bg': 'None'},
\   'DiffDelete': {'fg': 'Delete', 'bg': 'None'},
\   'DiffText': {'fg': 'Information',},
\   'DiffAdded': {'fg': 'Add'},
\   'DiffFile': {'fg': 'Emphasis'},
\   'DiffNewFile': {'fg': 'Add'},
\   'DiffLine': {'fg': 'Information'},
\   'DiffRemoved': {'fg': 'Delete'},
\   'gitcommitBranch': {'fg': 'Marker'},
\   'gitcommitHeader': {'fg': 'Header'},
\   'gitcommitSummary': {'fg': 'None'},
\   'gitcommitOverflow': {'fg': 'Emphasis'},
\   'gitcommitUntrackedFile': {'fg': 'Warning'},
\   'gitcommitDiscardedFile': {'fg': 'Emphasis'},
\   'gitcommitSelectedFile': {'fg': 'Information'},
\   'gitcommitUnmergedFile': {'fg': 'Warning'},
\   'SignifySignAdd': {'fg': 'Add'},
\   'SignifySignChange': {'fg': 'Change'},
\   'SignifySignDelete': {'fg': 'Delete'},
\   'GitGutterAdd': {'fg': 'Add'},
\   'GitGutterChange': {'fg': 'Change'},
\   'GitGutterDelete': {'fg': 'Delete'},
\   'GitSignsAdd': {'fg': 'Add'},
\   'GitSignsChange': {'fg': 'Change'},
\   'GitSignsDelete': {'fg': 'Delete'},
\   'HopNextKey': {'fg': 'Emphasis', 'attrs': ['bold']},
\   'HopNextKey1': {'fg': 'Emphasis', 'attrs': ['bold']},
\   'HopNextKey2': {'fg': 'Emphasis'},
\   'HopUnmatched': {'fg': 'Quiet'},
\   'HopCursor': {'attrs': ['reverse']},
\   'ALEError': {'fg': 'Error', 'attrs': ['underline']},
\   'ALEWarning': {'fg': 'Warning', 'attrs': ['underline']},
\   'ALEInfo': {'fg': 'Information', 'attrs': ['underline']},
\   'LspError': {'fg': 'Error', 'attrs': ['']},
\   'LspErrorText': {'fg': 'Error', 'attrs': ['']},
\   'LspErrorHighlight': {'fg': 'Error', 'attrs': ['underline']},
\   'LspErrorVirtualText': {'fg': 'Error', 'bg': 'Background'},
\   'LspWarning': {'fg': 'Warning'},
\   'LspWarningText': {'fg': 'Warning'},
\   'LspWarningHighlight': {'fg': 'Warning', 'attrs': ['underline']},
\   'LspWarningVirtualText': {'fg': 'Warning', 'bg': 'Background'},
\   'LspInformation': {'fg': 'Information'},
\   'LspInformationText': {'fg': 'Information'},
\   'LspInformationHighlight': {'fg': 'Information', 'attrs': ['underline']},
\   'LspInformationVirtualText': {'fg': 'Information', 'bg': 'Background'},
\   'LspHint': {'fg': 'Hint'},
\   'LspHintText': {'fg': 'Hint'},
\   'LspHintHighlight': {'fg': 'Hint', 'attrs': ['underline']},
\   'LspHintVirtualText': {'fg': 'Hint', 'bg': 'Background'},
\   'LspCodeActionText': {'fg': 'Marker'},
\   'LspDiagnosticsDefaultError': {'fg': 'Error'},
\   'LspDiagnosticsDefaultWarning': {'fg': 'Warning'},
\   'LspDiagnosticsDefaultInformation': {'fg': 'Information'},
\   'LspDiagnosticsDefaultHint': {'fg': 'Hint'},
\   'LspDiagnosticsUnderlinedError': {'fg': 'Error', 'attrs': ['underline']},
\   'LspDiagnosticsUnderlinedWarning': {'fg': 'Warning', 'attrs': ['underline']},
\   'LspDiagnosticsUnderlinedInformation': {'fg': 'Information', 'attrs': ['underline']},
\   'LspDiagnosticsUnderlinedHint': {'fg': 'Hint', 'attrs': ['underline']},
\   'LspReferenceRead': {'bg': 'Background'},
\   'LspReferenceText': {'bg': 'Background'},
\   'LspReferenceWrite': {'bg': 'Background'},
\   'DiagnosticError': {'fg': 'Error'},
\   'DiagnosticWarn': {'fg': 'Warning'},
\   'DiagnosticInfo': {'fg': 'Information'},
\   'DiagnosticHint': {'fg': 'Hint'},
\   'DiagnosticUnderlineError': {'fg': 'Error', 'attrs': ['underline']},
\   'DiagnosticUnderlineWarn': {'fg': 'Warning', 'attrs': ['underline']},
\   'DiagnosticUnderlineInfo': {'fg': 'Information', 'attrs': ['underline']},
\   'DiagnosticUnderlineHint': {'fg': 'Hint', 'attrs': ['underline']},
\   'TSAnnotation': {'fg': 'Keyword'},
\   'TSAttribute': {'fg': 'Macro'},
\   'TSBoolean': {'fg': 'Literal'},
\   'TSCharacter': {'fg': 'String'},
\   'TSComment': {'fg': 'Quiet', 'attrs': ['italic']},
\   'TSConditional': {'fg': 'Statement'},
\   'TSConstBuiltin': {'fg': 'Constant'},
\   'TSConstMacro': {'fg': 'Constant',},
\   'TSConstant': {'fg': 'Constant'},
\   'TSConstructor': {'fg': 'None'},
\   'TSEmphasis': {'attrs': ['bold']},
\   'TSError': {'fg': 'Error'},
\   'TSException': {'fg': 'Statement'},
\   'TSField': {'fg': 'None'},
\   'TSFloat': {'fg': 'Literal'},
\   'TSFuncBuiltin': {'fg': 'Macro'},
\   'TSFuncMacro': {'fg': 'Macro'},
\   'TSFunction': {'fg': 'Function'},
\   'TSInclude': {'fg': 'Keyword'},
\   'TSKeyword': {'fg': 'Keyword'},
\   'TSKeywordFunction': {'fg': 'Keyword'},
\   'TSLabel': {'fg': 'Statement'},
\   'TSMethod': {'fg': 'Function'},
\   'TSNamespace': {'fg': 'None'},
\   'TSNumber': {'fg': 'Literal'},
\   'TSOperator': {'fg': 'Operator'},
\   'TSParameter': {'fg': 'None'},
\   'TSParameterReference': {'fg': 'None'},
\   'TSProperty': {'fg': 'None'},
\   'TSPunctBracket': {'fg': 'None'},
\   'TSPunctDelimiter': {'fg': 'None'},
\   'TSPunctSpecial': {'fg': 'None'},
\   'TSRepeat': {'fg': 'Statement'},
\   'TSString': {'fg': 'String'},
\   'TSStringEscape': {'fg': 'Escape'},
\   'TSStringRegex': {'fg': 'Escape'},
\   'TSStructure': {'fg': 'Keyword'},
\   'TSTag': {'fg': 'Keyword'},
\   'TSTagDelimiter': {'fg': 'None'},
\   'TSText': {'fg': 'String'},
\   'TSType': {'fg': 'Type'},
\   'TSTypeBuiltin': {'fg': 'Type'},
\   'TSUnderline': {'attrs': ['underline']},
\   'TSURI': {'fg': 'Emphasis', 'attrs': ['underline']},
\   'TSVariable': {'fg': 'Variable'},
\   'TSVariableBuiltin': {'fg': 'Constant'},
\ },
\}

function! s:merge(default, override) abort
  let l:new = copy(a:default)
  for [l:k, l:v] in items(a:override)
    if type(l:v) is v:t_dict && type(get(l:new, l:k)) is v:t_dict
      let l:new[l:k] = s:merge(l:new[l:k], l:v)
    else
      let l:new[l:k] = l:v
    endif
  endfor
  return l:new
endfunction

function! s:h(group, props)
  let l:cmd = "hi " . a:group
  let l:fg = get(a:props, 'fg', '')
  let l:bg = get(a:props, 'bg', '')
  let l:attr = join(map(get(a:props, 'attrs', []), { -> v:val is# 'italic' ? s:italic : v:val }), ',')
  if !empty(l:fg)
    let l:fg = s:config.colors[s:config.categories[l:fg]]
    let l:cmd = l:cmd . ' ctermfg=' . l:fg.cterm . ' guifg=' . l:fg.gui
  endif
  if !empty(l:bg)
    let l:bg = s:config.colors[s:config.categories[l:bg]]
    let l:cmd = l:cmd . ' ctermbg=' . l:bg.cterm . ' guibg=' . l:bg.gui
  endif
  if !empty(l:attr)
    let l:cmd = l:cmd . ' cterm=' . l:attr . ' gui=' . l:attr
  endif
  if !empty(l:fg) || !empty(l:bg) || !empty(l:attr)
    execute l:cmd
  end
endfunction

let s:config = s:merge(s:default_config, get(g:, 'palette', {}))
let s:italic = s:config.italic ? 'italic' : ''

for [group, hl] in items(s:config.highlights)
  call s:h(group, hl)
endfor
